set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")
set(CMAKE_SYSTEM_PROCESSOR avr)
set(CMAKE_CROSSCOMPILING on)
set(CMAKE_STATIC_LIBRARY_SUFFIX ".a")
set(CMAKE_STATIC_LIBRARY_PREFIX "lib")
set(CMAKE_EXECUTABLE_SUFFIX ".elf")
set(WIN32)
set(APPLE)
set(UNIX)

find_program(CMAKE_AVR_CC avr-gcc REQUIRED)
find_program(CMAKE_AVR_CXX avr-g++ REQUIRED)
find_program(CMAKE_AVR_OBJCOPY avr-objcopy REQUIRED)
find_program(CMAKE_AVR_SIZE avr-size REQUIRED)
find_program(CMAKE_AVR_OBJDUMP avr-objdump REQUIRED)
find_program(CMAKE_AVR_RANLIB avr-ranlib REQUIRED)
find_program(CMAKE_AVR_NM avr-nm REQUIRED)
find_program(CMAKE_AVR_AR avr-ar REQUIRED)
find_program(CMAKE_AVR_STRIP avr-strip)
find_program(CMAKE_AVR_PERL perl)

if (NOT DEFINED CMAKE_AVR_MCU)
    message(FATAL_ERROR "must define CMAKE_AVR_MCU")
endif()

if (NOT DEFINED CMAKE_AVR_F_CPU)
    message(FATAL_ERROR "must define CMAKE_AVR_F_CPU")
endif()

set(CMAKE_C_COMPILER ${CMAKE_AVR_CC})
set(CMAKE_CXX_COMPILER ${CMAKE_AVR_CXX})
set(CMAKE_ASM_COMPILER ${CMAKE_AVR_CC})
set(CMAKE_RANLIB ${CMAKE_AVR_RANLIB})
set(CMAKE_AR ${CMAKE_AVR_AR})
set(CMAKE_OBJCOPY ${CMAKE_AVR_OBJCOPY})
set(CMAKE_SIZE ${CMAKE_AVR_SIZE})
set(CMAKE_NM ${CMAKE_AVR_NM})
set(CMAKE_STRIP ${CMAKE_AVR_STRIP})

set(CMAKE_C_FLAGS_INIT "-mmcu=${CMAKE_AVR_MCU}")
set(CMAKE_CXX_FLAGS_INIT "${CMAKE_C_FLAGS_INIT}")
set(CMAKE_ASM_FLAGS_INIT "${CMAKE_C_FLAGS_INIT}")

set(CMAKE_COMPILE_OBJECT_PARAMETERS "-c -pipe -gdwarf-2 -g2 -fshort-enums -fno-inline-small-functions -fpack-struct -Wall -fno-strict-aliasing -funsigned-char -funsigned-bitfields -ffunction-sections -mrelax -fstack-usage -fno-jump-tables -Wstrict-prototypes -DF_CPU=${CMAKE_AVR_F_CPU}UL <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> <SOURCE>")
set(CMAKE_C_COMPILE_OBJECT "<CMAKE_C_COMPILER> ${CMAKE_COMPILE_OBJECT_PARAMETERS}")
set(CMAKE_CXX_COMPILE_OBJECT "<CMAKE_CXX_COMPILER> ${CMAKE_COMPILE_OBJECT_PARAMETERS}")
set(CMAKE_ASM_COMPILE_OBJECT "<CMAKE_ASM_COMPILER> ${CMAKE_COMPILE_OBJECT_PARAMETERS}")

set(CMAKE_EXE_LINKER_FLAGS_INIT "-Wl,--gc-sections -Wl,--relax")

set(CMAKE_LINK_EXECUTABLE_PARAMETERS "<FLAGS> <OBJECTS> -o <TARGET>${CMAKE_EXECUTABLE_SUFFIX} <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> -Wl,-Map=<TARGET_BASE>.map,--cref <LINK_LIBRARIES>")
set(CMAKE_LINK_EXECUTABLE_AFTER 
    "\"${CMAKE_AVR_OBJCOPY}\" -O ihex -R .eeprom -R .fuse -R .lock -R .signature <TARGET_BASE>${CMAKE_EXECUTABLE_SUFFIX} <TARGET_BASE>.hex"
    "\"${CMAKE_AVR_OBJCOPY}\" -O ihex -j .eeprom --set-section-flags=.eeprom=\"alloc,load\" --change-section-lma .eeprom=0 --no-change-warnings <TARGET_BASE>${CMAKE_EXECUTABLE_SUFFIX} <TARGET_BASE>.eep"
    "\"${CMAKE_AVR_OBJCOPY}\" -O binary -R .eeprom -R .fuse -R .lock -R .signature <TARGET_BASE>${CMAKE_EXECUTABLE_SUFFIX} <TARGET_BASE>.bin"
    "\"${CMAKE_AVR_OBJCOPY}\" -h -d -S -z <TARGET_BASE>${CMAKE_EXECUTABLE_SUFFIX} > <TARGET_BASE>.lss"
    "\"${CMAKE_AVR_NM}\" -n <TARGET_BASE>${CMAKE_EXECUTABLE_SUFFIX} > <TARGET_BASE>.sym"
    "\"${CMAKE_AVR_SIZE}\" --mcu=${CMAKE_AVR_MCU} --format=avr <TARGET_BASE>${CMAKE_EXECUTABLE_SUFFIX} > <TARGET_BASE>.size")
if (CMAKE_AVR_PERL)
    list(APPEND CMAKE_LINK_EXECUTABLE_AFTER "\"${CMAKE_AVR_PERL}\" \"${CMAKE_CURRENT_LIST_DIR}\"/avstack.pl <OBJECTS> > <TARGET_BASE>.stack")
endif()
set(CMAKE_C_LINK_EXECUTABLE 
    "<CMAKE_C_COMPILER> ${CMAKE_LINK_EXECUTABLE_PARAMETERS}"
    ${CMAKE_LINK_EXECUTABLE_AFTER})
set(CMAKE_CXX_LINK_EXECUTABLE
    "<CMAKE_CXX_COMPILER> ${CMAKE_LINK_EXECUTABLE_PARAMETERS}"
    ${CMAKE_LINK_EXECUTABLE_AFTER})
set(CMAKE_ASM_LINK_EXECUTABLE
    "<CMAKE_ASM_COMPILER> ${CMAKE_LINK_EXECUTABLE_PARAMETERS}"
    ${CMAKE_LINK_EXECUTABLE_AFTER})

set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES CMAKE_AVR_MCU CMAKE_AVR_F_CPU)